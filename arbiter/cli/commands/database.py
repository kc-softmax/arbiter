from typing import Optional
import typer

from arbiter.cli.utils import AsyncTyper

app = AsyncTyper()

@app.command()
async def init():
    """Initializes a new database."""
    import os
    import imp
    from sqlalchemy.exc import ProgrammingError
    from arbiter.api.database import init_database

    module_path = os.path.join(".","arbiter_server",'model.py')
    imp.load_source("model", module_path)

    try:
        await init_database()
        typer.echo(typer.style("New Database Created", fg=typer.colors.GREEN, bold=True))
    except ProgrammingError as e:
        typer.echo(typer.style(e, fg=typer.colors.RED))
        typer.echo("If you need to migrate your database, use the 'arbiter database revision' and 'arbiter database upgrade' command.")

@app.command()
def migrate():
    """
    Create alembic revision autogenerated
    """
    _alembic_revision(autogenerated=True)
    typer.echo(typer.style("New database revision Created", fg=typer.colors.GREEN, bold=True))
    

@app.command()
def upgrade(
    revision: Optional[str] = typer.Option("head", "--revision", "-r", help="Revision identifier.")
):
    _alembic_upgrade(revision)
    typer.echo(typer.style("Success to upgrade the database", fg=typer.colors.GREEN, bold=True))

@app.command()
def head():
    pass

@app.command()
def current():
    pass

@app.command
def stamp():
    pass

@app.command
def downgrade():
    pass

@app.command
def dump():
    pass

@app.command
def restore():
    pass

def _alembic_revision(autogenerated = False):
    from alembic import command as alembic_command
    from alembic.config import Config as AlembicConfig
    from arbiter.cli import CONFIG_FILE

    alembic_cfg = AlembicConfig(CONFIG_FILE)
    alembic_command.revision(alembic_cfg, autogenerate=autogenerated)

def _alembic_upgrade(revision: str):
    from alembic import command as alembic_command
    from alembic.config import Config as AlembicConfig
    from arbiter.cli import CONFIG_FILE

    alembic_cfg = AlembicConfig(CONFIG_FILE)
    alembic_command.upgrade(alembic_cfg, revision)
